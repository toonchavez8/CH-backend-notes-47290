paths:
  /api/products:
    get:
      summary: Get all products
      tags:
        - Products
      responses:
        200:
          description: Returns an array of all the products
          content:
            application/json:
              example:
                status: success
                payload:
                  - _id: "65810f3e3160c42463eb78fc"
                    title: "Elegant Granite Table"
                    description: "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit"
                    price: 903
                    thumbnail:
                      - "https://picsum.photos/seed/nzkuvtMAtp/640/480"
                    code: "qWFivAP"
                    stock: 0
                    category:
                      - "Toys"
                      - "Computers"
                    owner: "admin"
                    __v: 0
        400:
          description: Bad Request
        500:
          description: Internal Server Error

    post:
      summary: Create a new product
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductInput"
      responses:
        201:
          description: Returns the created product
          content:
            application/json:
              example:
                status: success
                payload:
                  _id: "newly_generated_id"
                  title: "New Product"
                  description: "Description of the new product"
                  price: 999
                  thumbnail:
                    - "https://example.com/new-thumbnail.jpg"
                  category:
                    - "New Category"
                  owner: "admin"
                  __v: 0
        400:
          description: Bad Request
        500:
          description: Internal Server Error

  /api/products/{pid}:
    get:
      summary: Get a product by ID
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
          description: The ID of the product to be retrieved
      responses:
        200:
          description: Successful response with the specified product
          content:
            application/json:
              example:
                status: success
                payload:
                  _id: "65810f3e3160c42463eb78fc"
                  title: "Elegant Granite Table"
                  description: "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit"
                  price: 903
                  thumbnail:
                    - "https://picsum.photos/seed/nzkuvtMAtp/640/480"
                  code: "qWFivAP"
                  stock: 0
                  category:
                    - "Toys"
                    - "Computers"
                  owner: "admin"
                  __v: 0
        400:
          description: Bad Request
        404:
          description: Product not found
        500:
          description: Internal Server Error

    put:
      summary: Update a product by ID
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
          description: The ID of the product to be updated
        - name: product
          in: body
          required: true
          description: The updated product information
          schema:
            $ref: "#/components/schemas/ProductInput"
      security:
        - jwt: [] # Specify JWT authentication for this operation
      responses:
        200:
          description: Product updated successfully
          content:
            application/json:
              example:
                status: success
                payload:
                  _id: "updated_id"
                  title: "Updated Product"
                  description: "Description of the updated product"
                  price: 123
                  thumbnail:
                    - "https://example.com/updated-thumbnail.jpg"
                  category:
                    - "Updated Category"
                  owner: "admin"
                  __v: 1
        400:
          description: Bad Request
        404:
          description: Product not found
        500:
          description: Internal Server Error

    delete:
      summary: Delete a product by ID
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
          description: The ID of the product to be deleted
      security:
        - jwt: [] # Specify JWT authentication for this operation
      responses:
        200:
          description: Product deleted successfully
          content:
            application/json:
              example:
                status: success
                message: "Product deleted successfully."
        403:
          description: Forbidden
          content:
            application/json:
              example:
                status: error
                message: "You don't have permission to delete this product."
        404:
          description: Product not found
        500:
          description: Internal Server Error

  /api/products/realtime:
    get:
      summary: Get real-time product data
      tags:
        - Products
      security:
        - jwt: [] # Specify JWT authentication for this operation
      responses:
        200:
          description: Successful response with real-time product data
          content:
            application/json:
              example:
                status: success
                payload: "Real-time product data"
        403:
          description: Forbidden
          content:
            application/json:
              example:
                status: error
                message: "You don't have permission to access real-time product data."
        500:
          description: Internal Server Error

  /api/products/create/mockingproducts:
    get:
      summary: Create mocking products
      tags:
        - Products
      responses:
        200:
          description: Mocking products created successfully
          content:
            application/json:
              example:
                status: success
                message: "Mocking products created successfully."
        500:
          description: Internal Server Error

components:
  schemas:
    ProductInput:
      type: object
      properties:
        title:
          type: string
          description: The title of the product
        description:
          type: string
          description: The description of the product
        price:
          type: number
          description: The price of the product
        thumbnail:
          type: array
          items:
            type: string
          description: URL of the product thumbnail image
        category:
          type: array
          items:
            type: string
          description: Product category
      required:
        - title
        - description
        - price
